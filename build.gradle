// Copyright (c) 2020 Google LLC All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.18'
    id "org.jetbrains.grammarkit" version "2020.1.2"
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'com.palantir.git-version' version '0.12.3'
}

def baseVersion = '0.1'
def gitHash = versionDetails().gitHash

apply plugin: 'org.jetbrains.grammarkit'

// import is optional to make task creation easier

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

group 'com.google.idea'

version "$baseVersion-SNAPSHOT-$gitHash"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task generateLexer(type: GenerateLexer) {
    // source flex file
    source = "src/grammar/gn.flex"

    // target directory for lexer
    targetDir = "src/gen/com/google/idea/gn"

    // target classname, target file will be targetDir/targetClass.java
    targetClass = "GnLexer"

    // if set, plugin will remove a lexer output file before generating new one. Default: false
    purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
    // source bnf file
    source = "src/grammar/gn.bnf"

    // optional, task-specific root for the generated files. Default: none
    targetRoot = 'src/gen'

    // path to a parser file, relative to the targetRoot
    pathToParser = '/com/google/idea/gn/parser/GnParser.java'

    // path to a directory with generated psi files, relative to the targetRoot
    pathToPsiRoot = '/com/google/idea/gn/psi'

    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
    purgeOldFiles = true
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2019.3'
    sandboxDirectory 'tmp/sandbox'
    plugins 'PsiViewer:193-SNAPSHOT'
}

tasks.withType(compileKotlin.class) {
    dependsOn generateLexer, generateParser
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main {
        java {
            srcDir 'src/gen'
        }
    }
}

patchPluginXml {
    untilBuild "201.*"
    changeNotes """
    <h2>First release</h2>
    <ul>
        <li>Basic syntax highlighting</li>
        <li>Code navigation</li>
    </ul>
  </change-notes>
    """
}